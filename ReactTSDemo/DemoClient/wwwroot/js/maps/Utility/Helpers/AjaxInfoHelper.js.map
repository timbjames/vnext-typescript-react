{"version":3,"sources":["Utility/Helpers/AjaxInfoHelper.ts"],"names":[],"mappings":";;;;IAMA,oCAAoC,UAAgC;QAChE,MAAM,CAAC,UAAU,KAAK,+BAAmB,CAAC,MAAM,IAAI,UAAU,KAAK,+BAAmB,CAAC,WAAW,CAAC;IACvG,CAAC;IAED,wBAA+B,cAAmB,EAAE,KAAW;QAE3D,MAAM,CAAC,IAAI,OAAO,CAAM,UAAC,OAAiB,EAAE,MAAgB;YAExD,IAAI,WAAW,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;YACtC,IAAI,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;YAEpD,CAAC,CAAC,IAAI,CAAC;gBACH,GAAG,EAAE,cAAc,CAAC,GAAG;gBACvB,MAAM,EAAE,cAAc,CAAC,MAAM;gBAC7B,WAAW,EAAE,kBAAkB;gBAC/B,IAAI,EAAE,iBAAiB;gBACvB,WAAW,EAAE,KAAK;gBAClB,OAAO,EAAE,CAAC,UAAC,IAAS,EAAE,UAAkB,EAAE,KAAgB;oBAEtD,OAAO,CAAC,EAAE,UAAU,EAAE,KAAK,CAAC,MAAM,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;gBAE9D,CAAC,CAAC;gBACF,KAAK,EAAE,CAAC,UAAC,KAAgB;oBACrB,MAAM,CAAC,EAAE,UAAU,EAAE,KAAK,CAAC,MAAM,EAAE,YAAY,EAAE,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC;gBAC3E,CAAC,CAAC;aACL,CAAC,CAAC;QAEP,CAAC,CAAC,CAAC;IACP,CAAC;IAxBD,2CAwBC,CAAA","file":"Utility/Helpers/AjaxInfoHelper.js","sourcesContent":["// 3rd Party References\r\nimport * as $ from 'jquery'\r\n\r\n// Utility references\r\nimport { AjaxInfoStatusCodes } from '../Enums/AjaxEnums';\r\n\r\nfunction isResolvableHttpStatusCode(statusCode?: AjaxInfoStatusCodes): boolean {\r\n    return statusCode === AjaxInfoStatusCodes.HttpOK || statusCode === AjaxInfoStatusCodes.HttpCreated;\r\n}\r\n\r\nexport function realAjaxCaller(apiRouteMethod: any, query?: any): Promise<any> {\r\n    \r\n    return new Promise<any>((resolve: Function, reject: Function) => {\r\n\r\n        var requestData = $.extend({}, query);\r\n        var requestDataAsJson = JSON.stringify(requestData);\r\n        \r\n        $.ajax({\r\n            url: apiRouteMethod.Url,\r\n            method: apiRouteMethod.Method,\r\n            contentType: 'application/json',\r\n            data: requestDataAsJson,\r\n            processData: false,\r\n            success: ((data: any, textStatus: string, jqxhr: JQueryXHR) => {\r\n                \r\n                resolve({ statusCode: jqxhr.status, dataReturned: data });\r\n\r\n            }),\r\n            error: ((jqxhr: JQueryXHR) => {                \r\n                reject({ statusCode: jqxhr.status, dataReturned: jqxhr.responseJSON });  \r\n            })\r\n        });\r\n\r\n    });\r\n}\r\n"],"sourceRoot":"/source/"}